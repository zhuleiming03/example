#config root logger
log4j.rootLogger = TRACE,system.out
log4j.appender.system.out=org.apache.log4j.ConsoleAppender
log4j.appender.system.out.layout=org.apache.log4j.PatternLayout
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
#%p 输出优先级，即 TRACE，DEBUG，INFO，WARN，ERROR
#%F 输出日志构造器的类名，即LoggerFactory.getLogger(Slf4j.class)中的Slf4j
#%L 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)
#%t 输出产生该日志事件的线程名
#%c 输出所属的类目，通常就是所在类的全名
#%m 输出代码中指定的消息
#%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”
log4j.appender.system.out.layout.ConversionPattern=Logger-->%d{yyyy MMM dd HH:mm:ss,SSS} %5p {%F:%L}[%t][%c]-%m%n

#config this Project.file logger
log4j.logger.thisProject.file=INFO,thisProject.file.out
log4j.appender.thisProject.file.out=org.apache.log4j.DailyRollingFileAppender
log4j.appender.thisProject.file.out.File=logContentFile.log
#log4j.appender.thisProject.file.out.File=d:\\log.txt
log4j.appender.thisProject.file.out.layout=org.apache.log4j.PatternLayout
log4j.appender.thisProject.file.out.layout.ConversionPattern=log4j-->%d{yyyy MMM dd HH:mm:ss,SSS}%5p{%F\:%L}-%m%n